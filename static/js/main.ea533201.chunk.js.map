{"version":3,"sources":["components/header.jsx","components/action.js","components/option.jsx","components/options.jsx","components/addToDo.jsx","App.js","serviceWorker.js","index.js"],"names":["navBar","color","padding","Header","state","react_default","a","createElement","className","style","this","props","headerData","heading","subHeading","Component","btnDiv","margin","marginBottom","marginRight","marginLeft","textAlign","jumbotron","paddingTop","paddingBottom","Actions","onClick","picTask","Option","taskOption","optionsDiv","clearToDoStyles","marginTop","backgroundColor","border","fontSize","Options","_this2","type","handlDeleteOptions","hidden","hasOptions","optionsData","map","option","components_option","key","optionData","addToDoDIV","addBtnStyle","fontWeight","errDataSytle","AddToDo","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","e","preventDefault","userInput","target","value","trim","length","handleErr","indexOf","handleNewTask","errorData","onSubmit","placeholder","aria-label","aria-describedby","name","id","appData","header","App","options","error","handlDelete","handleNewEntry","pickTask","handleErrors","setState","randomTaskNumber","Math","floor","random","alert","newTask","previousState","concat","err","action","optionsDataCount","addToDo","selectedTask","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea533201.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nconst navBar = {\n  color: \"white\",\n  padding: \"15px\"\n};\nclass Header extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark bg-dark\" style={navBar}>\n          <h2> {this.props.headerData.heading} </h2>\n          <h4> {this.props.headerData.subHeading}</h4>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nconst btnDiv = {\n  margin: \"40px\",\n  marginBottom: \"-20px\",\n  marginRight: \"280px\",\n  marginLeft: \"280px\",\n  textAlign: \"center\"\n};\n\nconst jumbotron = {\n  paddingTop: \"30px\",\n  paddingBottom: \"30px\"\n};\nclass Actions extends Component {\n  state = {};\n  render() {\n    return (\n      <div style={btnDiv}>\n        <div className=\"jumbotron\" style={jumbotron}>\n          <h1 onClick={this.props.picTask}>What should I do ?</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Actions;\n","import React, { Component } from \"react\";\n\nclass Option extends Component {\n  state = {};\n  render() {\n    return <div>{this.props.taskOption}</div>;\n  }\n}\n\nexport default Option;\n","import React, { Component } from \"react\";\nimport Option from \"./option\";\n\nconst optionsDiv = {\n  marginRight: \"280px\",\n  marginLeft: \"280px\",\n  textAlign: \"center\"\n};\n\nconst clearToDoStyles = {\n  marginTop: \"0px\",\n  marginBottom: \"14px\",\n  backgroundColor: \"red\",\n  border: \"0.5px solid gray\",\n  color: \"white\",\n  fontSize: \"18px\"\n};\n\nclass Options extends Component {\n  state = {};\n  render() {\n    return (\n      <div style={optionsDiv}>\n        <button\n          style={clearToDoStyles}\n          type=\"button\"\n          className=\"btn  btn-sm btn-block\"\n          onClick={this.props.handlDeleteOptions}\n          hidden={!this.props.hasOptions}\n        >\n          Clear all TO DOs\n        </button>\n        {this.props.optionsData.map(option => {\n          return (\n            <div>\n              <Option\n                key={option}\n                taskOption={option}\n                optionData={this.props.optionsData}\n              />\n            </div>\n          );\n        })}\n        <Option />\n      </div>\n    );\n  }\n}\n\nexport default Options;\n","import React, { Component } from \"react\";\n\n//CSS styling\nconst addToDoDIV = {\n  marginTop: \"10px\",\n  marginRight: \"280px\",\n  marginLeft: \"280px\",\n  textAlign: \"center\"\n};\n\nconst addBtnStyle = {\n  backgroundColor: \"limegreen\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  border: \"1px solid gray\"\n};\n\nconst errDataSytle = {\n  color: \"red\",\n  fontSize: \"10px\"\n};\n\nclass AddToDo extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const userInput = e.target.option.value.trim();\n    if (!userInput) {\n      const err = \"Please enter a task\";\n      this.props.handleErr(err);\n      return;\n    } else if (userInput.length < 2) {\n      const err = \"Task too short\";\n      this.props.handleErr(err);\n      return;\n    } else if (this.props.optionsData.indexOf(userInput) !== -1) {\n      const err = \"This task already exists\";\n      this.props.handleErr(err);\n      return;\n    } else {\n      this.props.handleNewTask(userInput);\n    }\n  }\n\n  state = {};\n  render() {\n    return (\n      <div style={addToDoDIV}>\n        <div style={errDataSytle}>{this.props.errorData}</div>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Add a new TO DO\"\n              aria-label=\"new todo input\"\n              aria-describedby=\"basic-addon2\"\n              name=\"option\"\n            />\n            <div className=\"input-group-append\">\n              <span>\n                <button\n                  style={addBtnStyle}\n                  className=\"input-group-text\"\n                  id=\"basic-addon2\"\n                  type=\"submit\"\n                >\n                  &nbsp;&nbsp;&nbsp;&nbsp;Add a Task&nbsp;&nbsp;&nbsp;&nbsp;\n                </button>\n              </span>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddToDo;\n","import React, { Component } from \"react\";\nimport Header from \"./components/header\";\nimport Actions from \"./components/action\";\nimport Options from \"./components/options\";\nimport AddToDo from \"./components/addToDo\";\nimport Option from \"./components/option\";\nimport \"./App.css\";\n\nconst appData = {\n  header: {\n    heading: \"Get your things done\",\n    subHeading: \".... ... .. . Without missing any\"\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [],\n      error: \"\"\n    };\n    this.handlDelete = this.handlDelete.bind(this);\n    this.handleNewEntry = this.handleNewEntry.bind(this);\n    this.pickTask = this.pickTask.bind(this);\n    this.handleErrors = this.handleErrors.bind(this);\n  }\n\n  //Handle delete options\n  handlDelete() {\n    this.setState(() => {\n      return {\n        options: []\n      };\n    });\n  }\n\n  //Pick a random task\n  pickTask() {\n    const randomTaskNumber = Math.floor(\n      Math.random() * Math.floor(this.state.options.length)\n    );\n    this.state.options.length > 0\n      ? alert(this.state.options[randomTaskNumber])\n      : alert(\"There are no tasks\");\n  }\n\n  //Handle new entry\n  handleNewEntry(newTask) {\n    this.setState(previousState => {\n      return {\n        options: previousState.options.concat([newTask])\n      };\n    });\n  }\n\n  //Handle errors\n  handleErrors(err) {\n    this.setState(() => {\n      return {\n        error: err\n      };\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Header headerData={appData.header} />\n        <Actions picTask={this.pickTask} />\n        <Options\n          hasOptions={this.state.options.length > 0 ? true : false}\n          optionsData={this.state.options}\n          handlDeleteOptions={this.handlDelete}\n          optionsDataCount={this.state.options.length}\n        />\n        <AddToDo\n          handleNewTask={this.handleNewEntry}\n          optionsData={this.state.options}\n          handleErr={this.handleErrors}\n          errorData={this.state.error}\n          selectedTask={this.state.selectedTask}\n        />\n        <Option selectedTask={this.state.selectedTask} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}